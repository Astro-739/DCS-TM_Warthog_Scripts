// JESTER file for DCS_F-14B_Tomcat.tmc  by Astro
// version 2, Oct 2023




// -------------------- JESTER CONTROLS -------------------------------------------------

int dcs_f14_jester_controls()
{

	// -------------------- FLIGHT STICK -------------------------------------------------


	// Target Management Switch
	// H2U
	MapKeyIO(&Joystick, H2U, 	0,																						// I - 
							 	TEMPO( JSTR_lock_enemy_ahead,							 								// O - Radar – STT Lock Enemy Ahead
									   JSTR_lock_TWS_tgt_1, 500 ));														//     [long] Radar – STT Lock TWS Target #1
	// H2D
	MapKeyIO(&Joystick, H2D, 	0, 																						// I - 
							 	TEMPO( JSTR_break_lock,																	// O - Radar – Break Lock
									   JSTR_lock_TWS_tgt_3, 500 ));														//     [long] Radar – STT Lock TWS Target #3
	// H2R							
	MapKeyIO(&Joystick, H2R, 	0, 																						// I - 
							 	TEMPO( JSTR_toggle_RWS_TWS, 															// O - Radar – Toggle RWS/TWS Mode
									   JSTR_lock_TWS_tgt_2, 500 ));														//     [long] Radar – STT Lock TWS Target #2
	// H2L
	MapKeyIO(&Joystick, H2L, 	0,																						// I -
							 	TEMPO( JSTR_rdr_mode_auto, 																// O - Radar - Mode Auto
									   JSTR_toggle_PD_P_STT, 500 ));													//     [long] Radar – Toggle PD-STT or P-STT
	MapKeyRIO(&Joystick, H2L, 	0,																						// I -
								0 );																					// O -
								
	// Display Management Switch
	// H3U
	MapKeyIO(&Joystick, H3U, 	0,																						// I - 
								TEMPO( EXEC( "index_range = (index_range+1)%5;"											// O -     
											 "ActKey( KEYON+PULSE+X(radarrangelist, index_range) );" ),					//     Radar range step up
									   EXEC( "index_elev = (index_elev+1)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			//     [long] Radar elevation step up
	// H3D
	MapKeyIO(&Joystick, H3D, 	0,																						// I - 
								TEMPO( EXEC( "index_range = (index_range+4)%5;"											// O -     
											 "ActKey( KEYON+PULSE+X(radarrangelist, index_range) );" ),					//     Radar range step down
									   EXEC( "index_elev = (index_elev+4)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			// 	   [long] Radar elevation step down
	// H3R
	MapKeyIO(&Joystick, H3R, 	0, 																						// I - 
								TEMPO( CHAIN( JSTR_rdr_range_auto, D(),													// O - Radar - Range Auto
											  EXEC( "index_range = 2;" )),												//	   Reset range index to 2 (100 nm) (element 0 is first element in list)
									   EXEC( "index_az = (index_az+1)%5;"												//     
											 "ActKey( KEYON+PULSE+X(radarazlist, index_az) );" ), 500 ));				// 	   [long] Radar azimuth step right
	// H3L
	MapKeyIO(&Joystick, H3L, 	0, 																						// I - 
								TEMPO( CHAIN( JSTR_rdr_az_elev_auto, D(),												// O - Radar - Az/El Auto
											  EXEC( "index_az = 2;"														//	   Reset azimuth index to Center (element 0 is first element in list)
													"index_elev = 2;" )),												//	   Reset elevation index to Middle (element 0 is first element in list)
									   EXEC( "index_az = (index_az+4)%5;"												//     
											 "ActKey( KEYON+PULSE+X(radarazlist, index_az) );" ), 500 ));				// 	   [long] Radar azimuth step left




	// -------------------- THROTTLE -------------------------------------------------

	// MIC Switch (Transmit Switch)
	// MSU
	MapKeyIOUMD(&Throttle, MSU, 0, 																				// IU - 
								JSTR_rdr_mode_auto,													 			// OU - JSTR_rdr_mode_auto
								0,																				// IM - 
								EXEC( "if(WHDN_mode) ActKey( PULSE+KEYON+JSTR_WHDN_startup );" 					// OM - [WHDN] JSTR_WHDN_startup
									  "else ActKey( PULSE+KEYON+0 );" ),										//		
								0,																				// ID - 
								0 );																			// OD - 
	// MSD
	MapKeyIOUMD(&Throttle, MSD, 0, 																				// IU - 
								TEMPO( 0, 																		// OU - 
									   JSTR_jett_droptanks, 500 ),												//		[long] JSTR_jett_droptanks
								0,																				// IM - 
								EXEC( "if(WHDN_mode) ActKey( PULSE+KEYON+JSTR_check );" 						// OM - [WHDN] JSTR_check
									  "else ActKey( PULSE+KEYON+JSTR_nav_homebase );" ),						//		JSTR_nav_homebase
								0,																				// ID - 
								0 );																			// OD - 
	// MSR
	MapKeyIOUMD(&Throttle, MSR, 0, 																				// IU - 
								JSTR_jammer_onoff,																// OU - JSTR_jammer_onoff
								0,																				// IM - 
								CHAIN( JSTR_nav_wp1,															// OM - JSTR_nav_wp1
									   EXEC( "index_stpt_aa = 0;" )),											//		Set steerpoint index to match wp1 (first element is 0)
								0,																				// ID - 
								0 );																			// OD - 
	// MSL
	MapKeyIOUMD(&Throttle, MSL, 0, 																				// IU - 
								TEMPO( JSTR_ground_ac_stbl,														// OU - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// IM - 
								TEMPO( JSTR_ground_ac_stbl,														// OM - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// ID - 
								TEMPO( JSTR_ground_ac_stbl,														// OD - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ));													//		[long] JSTR_rdr_offon

	// MSP 
	MapKeyIO(&Throttle, MSP, 	0,																				// I - 
								JSTR_menu );																	// O - JSTR_menu 
								



	// Coolie Switch
	// CSU
	MapKeyIOUMD(&Throttle, CSU, 0, 																				// IU - 
								EXEC( "index_stpt_aa = (index_stpt_aa+2)%3;"									// OU - Previous A-A Steerpoint    
									  //"printf(\"index_stpt_aa = %i\\xa\", index_stpt_aa);"					// test
									  "ActKey( KEYON+PULSE+X(steerpointlist_aa, index_stpt_aa) );" ), 			// 
								0,																				// IM - 
								EXEC( "index_stpt_aa = (index_stpt_aa+2)%3;"									// OM - Previous A-A Steerpoint    
									  //"printf(\"index_stpt_aa = %i\\xa\", index_stpt_aa);"					// test
									  "ActKey( KEYON+PULSE+X(steerpointlist_aa, index_stpt_aa) );" ), 			// 
								0,																				// ID - 
								EXEC( "index_stpt_ag = (index_stpt_ag+4)%5;"									// OD - Previous A-G Steerpoint
									  "ActKey( KEYON+PULSE+X(steerpointlist_ag, index_stpt_ag) );" )); 			// 
	// CSD
	MapKeyIOUMD(&Throttle, CSD, 0,																	 			// IU - 
								EXEC( "index_stpt_aa = (index_stpt_aa+1)%3;"									// OU - Next A-A Steerpoint    
									  //"printf(\"index_stpt_aa = %i\\xa\", index_stpt_aa);"					// test
									  "ActKey( KEYON+PULSE+X(steerpointlist_aa, index_stpt_aa) );" ), 			// 
								0,																				// IM - 
								EXEC( "index_stpt_aa = (index_stpt_aa+1)%3;"									// OM - Next A-A Steerpoint    
									  //"printf(\"index_stpt_aa = %i\\xa\", index_stpt_aa);"					// test
									  "ActKey( KEYON+PULSE+X(steerpointlist_aa, index_stpt_aa) );" ), 			// 
								0,																				// ID - 
								EXEC( "index_stpt_ag = (index_stpt_ag+1)%5;"									// OD - Next A-G Steerpoint    
									  "ActKey( KEYON+PULSE+X(steerpointlist_ag, index_stpt_ag) );" ));			// 
	// CSR
	MapKeyIOUMD(&Throttle, CSR, 0,																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								0 );																			// OD - 
	// CSL
	MapKeyIOUMD(&Throttle, CSL, 0,																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								0 );																			// OD - 



}	// end dcs_f14_jester_controls()	================================================================





// -------------------- JESTER LANTIRN CONTROLS -------------------------------------------------

int dcs_f14_jester_lantirn_controls()
{

	// -------------------- FLIGHT STICK -------------------------------------------------

	// Target Management Switch - LANTIRN
	// H2U
	MapKeyIO(&Joystick, H2U, 	0,																						// I - 
							 	TEMPO( 0,												 								// O - 
									   JSTR_lntrn_designate, 500 ));													//     [long] LANTIRN - Laser Designate
	// H2D
	MapKeyIO(&Joystick, H2D, 	0, 																						// I - 
							 	TEMPO( JSTR_lntrn_stblarea,																// O - LANTIRN - Stabilise Area
									   JSTR_lntrn_undesignate, 500 ));													//     [long] LANTIRN - Laser Undesignate
	// H2R							
	MapKeyIO(&Joystick, H2R, 	0, 																						// I - 
							 	JSTR_lntrn_nexttgt ); 																	// O - LANTIRN - Next Target
	// H2L
	MapKeyIO(&Joystick, H2L, 	0,																						// I -
							 	JSTR_lntrn_prevtgt ); 																	// O - LANTIRN - Previous Target
	MapKeyRIO(&Joystick, H2L, 	0,																						// I -
								0 );																					// O -


	// Display Management Switch - LANTIRN
	// H3U
	MapKeyIO(&Joystick, H3U, 	0,																						// I - 
								JSTR_lntrn_srch_anyactive ); 															// O - LANTIRN - Search any active target
	// H3D
	MapKeyIO(&Joystick, H3D, 	0,																						// I - 
								JSTR_lntrn_srch_aircraftall );															// O - LANTIRN - Search any aircraft
	// H3R
	MapKeyIO(&Joystick, H3R, 	0, 																						// I - 
								JSTR_lntrn_srch_samactive );															// O - LANTIRN - Search any active SAM
	// H3L
	MapKeyIO(&Joystick, H3L, 	0, 																						// I - 
								JSTR_lntrn_srch_armoractive );															// O - LANTIRN - Search any active Armour


	// -------------------- THROTTLE -------------------------------------------------

	// MIC Switch (Transmit Switch) - LANTIRN
	// MSU
	MapKeyIOUMD(&Throttle, MSU, 0, 																				// IU - 
								0,													 							// OU - 
								0,																				// IM - 
								0, 																				// OM - 
								0,																				// ID - 
								JSTR_lntrn_q_eyeballs );														// OD - LANTIRN - Cue Eyeballs
	// MSD
	MapKeyIOUMD(&Throttle, MSD, 0, 																				// IU - 
								0, 																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								JSTR_lntrn_q_headctrl );														// OD - LANTIRN - Cue Head Control
	// MSR
	MapKeyIOUMD(&Throttle, MSR, 0, 																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								JSTR_lntrn_q_hud );																// OD - LANTIRN - Cue HUD
	// MSL
	MapKeyIOUMD(&Throttle, MSL, 0, 																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								0 );																			// OD - 
	// MSP 
	MapKeyIO(&Throttle, MSP, 	0,																				// I - 
								JSTR_menu );																	// O - JSTR_menu 
								


	// Coolie Switch - LANTIRN
	// CSU
	MapKeyIOUMD(&Throttle, CSU, 0, 																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								EXEC( "index_stpt_ag = (index_stpt_ag+4)%5;"									// OD - Previous A-G Steerpoint
									  "ActKey( KEYON+PULSE+X(steerpointlist_ag, index_stpt_ag) );" )); 			// 
	// CSD
	MapKeyIOUMD(&Throttle, CSD, 0,																	 			// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								EXEC( "index_stpt_ag = (index_stpt_ag+1)%5;"									// OD - Next A-G Steerpoint    
									  "ActKey( KEYON+PULSE+X(steerpointlist_ag, index_stpt_ag) );" ));			// 
	// CSR
	MapKeyIOUMD(&Throttle, CSR, 0,																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								EXEC( "ActKey( KEYON+PULSE+X(lantirn_q_stptlist, index_stpt_ag) );"	));			// OD - LANTIRN - Cue Current Steerpoint    
	// CSL
	MapKeyIOUMD(&Throttle, CSL, 0,																				// IU - 
								0,																				// OU - 
								0,																				// IM - 
								0,																				// OM - 
								0,																				// ID - 
								JSTR_lntrn_q_des );																// OD - LANTIRN - Cue Designated 




}	// end dcs_f14_jester_lantirn_controls()	==========================================================
