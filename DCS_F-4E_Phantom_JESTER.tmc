// JESTER file for DCS_F-4E_Phantom.tmc  by Astro
// version 1, May 2024




// -------------------- JESTER CONTROLS -------------------------------------------------

int dcs_f4e_jester_controls()
{

	// -------------------- FLIGHT STICK -------------------------------------------------


	// Target Management Switch
	// H2U
	MapKeyIO(&Joystick, H2U, 	0,																						// I - 
							 	JSTR_context_long );										 							// O - Scan - Lock selected contact
																														//	   Lock - Drop lock, keep contact focus
																														//	   Cage - Lock/Unlock contact ahead
	// H2D
	MapKeyIO(&Joystick, H2D, 	0, 																						// I - 
							 	JSTR_context_double );																	// O - Scan - Reset target selection
																														//	   Lock - Drop lock and focus
																														//	   Cage - Exit Cage mode
	// H2R							
	MapKeyIO(&Joystick, H2R, 	0, 																						// I - 
							 	JSTR_context_short );		 															// O - Scan - Select next contact
	// H2L
	MapKeyIO(&Joystick, H2L, 	0,																						// I -
							 	0 ); 																					// O - 
	MapKeyRIO(&Joystick, H2L, 	0,																						// I -
								0 );																					// O -
								
	// Display Management Switch
	// H3U
	MapKeyIO(&Joystick, H3U, 	0,																						// I - 
								TEMPO( SEQ( JSTR_rdr_range_50n, JSTR_rdr_range_50w ),									// O - Radar range 50 narrow/wide
									   EXEC( "index_elev = (index_elev+1)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			//     [long] Radar elevation step up
	// H3D
	MapKeyIO(&Joystick, H3D, 	0,																						// I - 
								TEMPO( SEQ( JSTR_rdr_range_25n, JSTR_rdr_range_25w ),									// O - Radar range 25 narrow/wide
									   EXEC( "index_elev = (index_elev+4)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			// 	   [long] Radar elevation step down
	// H3R
	MapKeyIO(&Joystick, H3R, 	0, 																						// I - 
								TEMPO( CHAIN( 0, D(),																	// O - Radar - Range Auto
											  EXEC( "index_range = 2;" )),												//	   Reset range index to 2 (100 nm) (element 0 is first element in list)
									   EXEC( "index_az = (index_az+1)%5;"												//     
											 "ActKey( KEYON+PULSE+X(radarazlist, index_az) );" ), 500 ));				// 	   [long] Radar azimuth step right
	// H3L
	MapKeyIO(&Joystick, H3L, 	0, 																						// I - 
								TEMPO( CHAIN( JSTR_rdr_az_elev_auto, D(),												// O - Radar - Az/El Auto
											  EXEC( "index_az = 2;"														//	   Reset azimuth index to Center (element 0 is first element in list)
													"index_elev = 2;" )),												//	   Reset elevation index to Middle (element 0 is first element in list)
									   EXEC( "index_az = (index_az+4)%5;"												//     
											 "ActKey( KEYON+PULSE+X(radarazlist, index_az) );" ), 500 ));				// 	   [long] Radar azimuth step left




	// -------------------- THROTTLE -------------------------------------------------

	// MIC Switch (Transmit Switch)
	// MSU
	MapKeyIOUMD(&Throttle, MSU, 0, 																				// IU - 
								0,																	 			// OU - 
								0,																				// IM - 
								EXEC( "if(WHDN_mode) ActKey( PULSE+KEYON+JSTR_WHDN_startup );" 					// OM - [WHDN] JSTR_WHDN_startup
									  "else ActKey( PULSE+KEYON+0 );" ),										//		
								0,																				// ID - 
								0 );																			// OD - 
	// MSD
	MapKeyIOUMD(&Throttle, MSD, 0, 																				// IU - 
								0, 																				// OU - 
								0,																				// IM - 
								EXEC( "if(WHDN_mode) ActKey( PULSE+KEYON+JSTR_check );" 						// OM - [WHDN] JSTR_check
									  "else ActKey( PULSE+KEYON+JSTR_nav_homebase );" ),						//		JSTR_nav_homebase
								0,																				// ID - 
								0 );																			// OD - 
	// MSR
	MapKeyIOUMD(&Throttle, MSR, 0, 																				// IU - 
								JSTR_jammer_onoff,																// OU - JSTR_jammer_onoff
								0,																				// IM - 
								CHAIN( JSTR_nav_wp1,															// OM - JSTR_nav_wp1
									   EXEC( "index_stpt_aa = 0;" )),											//		Set steerpoint index to match wp1 (first element is 0)
								0,																				// ID - 
								0 );																			// OD - 
	// MSL
	MapKeyIOUMD(&Throttle, MSL, 0, 																				// IU - 
								TEMPO( 0,																		// OU - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// IM - 
								TEMPO( 0,																		// OM - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// ID - 
								TEMPO( 0,																		// OD - Radar - Ground/Aircraft Stabilize
									   JSTR_rdr_offon, 500 ));													//		[long] JSTR_rdr_offon

	// MSP 
	MapKeyIO(&Throttle, MSP, 	0,																				// I - 
								JSTR_menu );																	// O - JSTR_menu 
								



	// Coolie Switch
	// CSU
	MapKeyIOUMD(&Throttle, CSU, 0,																	 			// IU - 
								JSTR_menu_main,																	// OU - Jester UI Navigate To Main Menu
								0,																				// IM - 
								JSTR_menu_main,																	// OM - Jester UI Navigate To Main Menu
								0,																				// ID - 
								JSTR_menu_main );																// OD - Jester UI Navigate To Main Menu
	// CSD
	MapKeyIOUMD(&Throttle, CSD, 0,																	 			// IU - 
								JSTR_menu_select,																// OU - Jester UI Middle/Select 
								0,																				// IM - 
								JSTR_menu_select,																// OM - Jester UI Middle/Select   
								0,																				// ID - 
								JSTR_menu_select );																// OD - Jester UI Middle/Select
	// CSR
	MapKeyIOUMD(&Throttle, CSR, 0,																				// IU - 
								JSTR_menu_right,																// OU - Jester UI Right/CW
								0,																				// IM - 
								JSTR_menu_right,																// OM - Jester UI Right/CW
								0,																				// ID - 
								JSTR_menu_right );																// OD - Jester UI Right/CW
	// CSL
	MapKeyIOUMD(&Throttle, CSL, 0,																				// IU - 
								JSTR_menu_left,																	// OU - Jester UI Left/CCW
								0,																				// IM - 
								JSTR_menu_left,																	// OM - Jester UI Left/CCW
								0,																				// ID - 
								JSTR_menu_left );																// OD - Jester UI Left/CCW



}	// end dcs_f4e_jester_controls()	================================================================





