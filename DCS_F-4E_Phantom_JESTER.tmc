// JESTER file for DCS_F-4E_Phantom.tmc  by Astro
// TARGET version 3.0.24.618
// version 1.3, Aug 2024




// -------------------- JESTER CONTROLS -------------------------------------------------

int dcs_f4e_jester_controls()
{

	// -------------------- FLIGHT STICK -------------------------------------------------


	// Target Management Switch
	// H2U
	MapKeyUMD(&AVA_F16, H2U, 	JSTR_context_long,																		// U - Scan - Lock selected contact / Lock - Drop lock, keep contact focus / Cage - Lock/Unlock contact ahead
								0,																						// M - 
							 	JSTR_context_short );										 							// D - Lock
	// H2D
	MapKeyUMD(&AVA_F16, H2D, 	JSTR_context_double,																	// U - Scan - Reset target selection / Lock - Drop lock and focus / Cage - Exit Cage mode
								0, 																						// M - 
							 	JSTR_context_short );																	// D - Drop lock
	// H2R							
	MapKey(&AVA_F16, H2R, 		JSTR_context_short );		 															// Scan - Select next contact
	// H2L
	MapKey(&AVA_F16, H2L, 		JSTR_rdr_iff ); 																		// Radar > IFF
	MapKeyR(&AVA_F16, H2L, 	0 );																					// 
								
	// Display Management Switch
	// H3U
	MapKeyIO(&AVA_F16, H3U, 	0,																						// I - 
								TEMPO( SEQ( JSTR_rdr_range_50n, JSTR_rdr_range_50w ),									// O - Radar range 50 narrow/wide
									   EXEC( "index_elev = (index_elev+1)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			//     [long] Radar elevation step up
	// H3D
	MapKeyIO(&AVA_F16, H3D, 	0,																						// I - 
								TEMPO( SEQ( JSTR_rdr_range_25n, JSTR_rdr_range_25w ),									// O - Radar range 25 narrow/wide
									   EXEC( "index_elev = (index_elev+4)%5;"											//     
											 "ActKey( KEYON+PULSE+X(radarelevlist, index_elev) );" ), 500 ));			// 	   [long] Radar elevation step down
	// H3R
	MapKeyIO(&AVA_F16, H3R, 	0, 																						// I - 
								0 );																					// O - 
	// H3L
	MapKeyIO(&AVA_F16, H3L, 	0, 																						// I - 
								0 );																					// O - 




	// -------------------- THROTTLE -------------------------------------------------

	// MIC Switch (Transmit Switch)
	// MSU
	MapKeyIOUMD(&Throttle, MSU, 0, 																				// IU - 
								0,																	 			// OU - 
								0,																				// IM - 
								EXEC( "if(WHDN_mode) ActKey( PULSE+KEYON+JSTR_WHDN_startup );" 					// OM - [WHDN] JSTR_WHDN_startup
									  "else ActKey( PULSE+KEYON+0 );" ),										//		
								0,																				// ID - 
								0 );																			// OD - 
	// MSD
	MapKeyIOUMD(&Throttle, MSD, 0, 																				// IU - 
								0, 																				// OU - 
								0,																				// IM - 
								0, 																				// OM - 
								0,																				// ID - 
								0 );																			// OD - 
	// MSR
	MapKeyIOUMD(&Throttle, MSR, 0, 																				// IU - 
								TEMPO( 0,																		// OU - JSTR_jammer_active
									   SEQ( JSTR_jammer_active,	JSTR_jammer_stby ),	500 ),						//      [long] JSTR_jammer_active / JSTR_jammer_stby
								0,																				// IM - 
								JSTR_nav_wp1,																	// OM - JSTR_nav_wp1
								0,																				// ID - 
								TEMPO( 0,																		// OD - JSTR_jammer_active
									   SEQ( JSTR_jammer_active,	JSTR_jammer_stby ),	500 ));						//      [long] JSTR_jammer_active / JSTR_jammer_stby

	// MSL
	MapKeyIOUMD(&Throttle, MSL, 0, 																				// IU - 
								TEMPO( 0,																		// OU - 
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// IM - 
								TEMPO( 0,																		// OM - 
									   JSTR_rdr_offon, 500 ),													//		[long] JSTR_rdr_offon
								0,																				// ID - 
								TEMPO( 0,																		// OD - 
									   JSTR_rdr_offon, 500 ));													//		[long] JSTR_rdr_offon

	// MSP 
	MapKeyIO(&Throttle, MSP, 	0,																				// I - 
								JSTR_menu );																	// O - JSTR_menu 
								



	// Coolie Switch
	// CSU
	MapKeyIOUMD(&Throttle, CSU, 0,																	 			// IU - 
								JSTR_menu_main,																	// OU - Jester UI Navigate To Main Menu
								0,																				// IM - 
								JSTR_menu_main,																	// OM - Jester UI Navigate To Main Menu
								0,																				// ID - 
								JSTR_menu_main );																// OD - Jester UI Navigate To Main Menu
	// CSD
	MapKeyIOUMD(&Throttle, CSD, 0,																	 			// IU - 
								JSTR_menu_select,																// OU - Jester UI Middle/Select 
								0,																				// IM - 
								JSTR_menu_select,																// OM - Jester UI Middle/Select   
								0,																				// ID - 
								JSTR_menu_select );																// OD - Jester UI Middle/Select
	// CSR
	MapKeyIOUMD(&Throttle, CSR, 0,																				// IU - 
								JSTR_menu_right,																// OU - Jester UI Right/CW
								0,																				// IM - 
								JSTR_menu_right,																// OM - Jester UI Right/CW
								0,																				// ID - 
								JSTR_menu_right );																// OD - Jester UI Right/CW
	// CSL
	MapKeyIOUMD(&Throttle, CSL, 0,																				// IU - 
								JSTR_menu_left,																	// OU - Jester UI Left/CCW
								0,																				// IM - 
								JSTR_menu_left,																	// OM - Jester UI Left/CCW
								0,																				// ID - 
								JSTR_menu_left );																// OD - Jester UI Left/CCW


	// LDGH
	MapKey(&Throttle, LDGH,   	TEMPO( JSTR_taperecorder, 															// Jester Command: Systems > AVTR > Standby / Record
									   CHAIN( DOWN+L_CTL+L_ALT, D(10), PULSE+'5', D(), UP+L_CTL+L_ALT ), 500 ));	// Jester Command: Systems > AVTR > Off


}	// end dcs_f4e_jester_controls()	================================================================





